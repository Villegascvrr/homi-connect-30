
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://salayaazmrghyqjddagm.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNhbGF5YWF6bXJnaHlxamRkYWdtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDM3MTIwNTUsImV4cCI6MjA1OTI4ODA1NX0.9gj_r8FTvbq_DuE4Bw7O-gP2GV8dbemQeUwd4Mwh9to";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    autoRefreshToken: true,
    persistSession: true,
    storage: typeof window !== 'undefined' ? localStorage : undefined,
    storageKey: 'homi-auth-session',
    detectSessionInUrl: true
  }
});

// Function to check if a session exists in localStorage
export const hasStoredSession = (): boolean => {
  if (typeof window === 'undefined') return false;
  
  const sessionStr = localStorage.getItem('homi-auth-session');
  if (!sessionStr) return false;
  
  try {
    const sessionData = JSON.parse(sessionStr);
    const isExpired = sessionData.expires_at && new Date(sessionData.expires_at * 1000) < new Date();
    return !isExpired;
  } catch (e) {
    console.error("Error parsing session from localStorage:", e);
    return false;
  }
};
